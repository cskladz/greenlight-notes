{"title":"Higher Order functio","message":"They take another function as an argument and/or return a new function.\n\nThere are many key factos needed to make up a function. Two of which go hand in hand. These are called parameters and arguments. A Parameter is a placeholder in the declaration of a function. An argument is the actual value of the parameter that gets passed into the function. \n\nHigher order functions a re useful becuase they:\n-significantly decrease the amount of time spending code...\n-have less errors of any sort in your line of code.\n-have an easier time understanding your code.\n-re-use more code.\n\nhow does a function pass in another function.\nin javascript, functions are values. this means that they can be assigned to variables and this, can be passed into other (Higher ORder) functions. \n\n\n\nFilter.... A function on the function that accepts another function as its argument which it will use to return a new 'filtered' version of the array. \n\ncallback function.... a callback function is a function that you send to other functions. \n\nFunction VS ForLoop.\nvar animals = [{ name: 'names', species: 'dog'},\n  { name: 'names', species: 'mouse'},\n  { name: 'names', species: 'cat'},\n  { name: 'names', species: 'tiger'}];\n\nvar dogs = animals.filter(function(animal) {\n  return animal.species === 'dog'\n});\n\nconsole.log(dogs);\n\nconst numbers = [1,2,3,4,5];\nconst odd = numbers.filter(function(e) {return e%2 === 1});\n//const odd2 = _.filter(numbers, function() {});\nconsole.log(odd);\n\nconst oddy = numbers.filter(odd1);\nfunction odd1(number){\n  if(number % 2 === 1) return number;\n  \n}\nconsole.log(oddy);\n\n","id":"1f184f8f-e073-45c6-af78-fc3bb84c271f","date":"2018-08-14T23:59:38.526Z"}